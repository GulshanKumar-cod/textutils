{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","console","log","newText","toUpperCase","showAlert","toLowerCase","split","join","length","Alert","alert","message","data-bs-dismiss","App","setMode","_useState3","_useState4","setAlert","setTimeout","document","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.5f315215.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from \"react-router-dom\"\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          {/* <Link className=\"nav-link\" to=\"/about\">{props.about}</Link> */}\r\n        </li>\r\n       \r\n      </ul>\r\n      <div className={`form-check form-switch text-${props.mode ==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n</div>\r\n      \r\n    </div>\r\n  </div>\r\n</nav>\r\n    </div>\r\n  )\r\n}\r\nNavbar.propTypes = {\r\n    title: PropTypes.string , \r\n    about: PropTypes.string\r\n}","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        console.log(\"Uppercase was clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to uppercase!\", \"success\")\r\n    }\r\n    const handleLowClick = ()=>{\r\n        console.log(\"Lowercase was clicked\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to lowercase!\", \"success\")\r\n    }\r\n    const handleClearClick = ()=>{\r\n       let newText = ''\r\n        setText(newText)\r\n        props.showAlert(\"Text cleared!\", \"success\")\r\n    }\r\n    const handleExtraSpaces = ()=>{\r\n        let newText = text.split(/[ ] + /);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Removed extra spaces!\", \"success\")\r\n    }\r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value)\r\n    }\r\n    const [text, setText] = useState('Enter text here');\r\n    return ( \r\n        <>\r\n        <div className=\"container\" style={{color: props.mode ==='dark'?'white':'#042743'}} >\r\n               <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode ==='dark'?'grey':'white', color: props.mode ==='dark'?'white':'#042743' }} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleLowClick}>Convert to Lowercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear Text</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n        </div>\r\n\r\n        <div className=\"container my-2\" style={{color: props.mode ==='dark'?'white':'#042743'}} >\r\n            <h2>Text Summary</h2>\r\n            <p> {text.split(\" \").length} words and {text.length} characters </p>\r\n            <p>{0.008 * text.split(\" \").length} Minutes Read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\n function Alert(props) {\r\n    // const capitalize = (word)=>{\r\n    //     const lower = word.toLowerCase();\r\n    //     return lower.charAt(0).toUpperCase + lower.slice(1);\r\n    // }\r\n  return (\r\n   props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{props.alert.type}</strong>: {props.alert.message}\r\n  <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n</div>\r\n  )\r\n}\r\nexport default Alert","import \"./App.css\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n// import ReactDOM from \"react-dom/client\";\n// import { BrowserRouter, Route, Routes} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      message: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 3000);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode is enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode is enabled\", \"success\");\n    }\n  };\n  return (\n    <>\n    {/* <BrowserRouter> */}\n      <Navbar\n        title=\"TextUtils\"\n        // about=\"About Us\"\n        mode={mode}\n        toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n{/* <Routes> */}\n  {/* <Route exact path=\"/about\" element={<About />} /> */}\n  {/* <Route exact path=\"/\" element= */}\n  <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>\n{/* </Routes> */}\n       </div>\n         {/* </BrowserRouter> */}\n       </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}