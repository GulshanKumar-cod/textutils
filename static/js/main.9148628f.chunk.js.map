{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","console","log","newText","toUpperCase","showAlert","toLowerCase","split","join","filter","element","Alert","height","alert","message","data-bs-dismiss","App","setMode","_useState3","_useState4","setAlert","setTimeout","document","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.9148628f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\"></li>\r\n            </ul>\r\n            <div\r\n              className={`form-check form-switch text-${\r\n                props.mode === \"light\" ? \"dark\" : \"light\"\r\n              }`}\r\n            >\r\n              <input\r\n                className=\"form-check-input\"\r\n                onClick={props.toggleMode}\r\n                type=\"checkbox\"\r\n                role=\"switch\"\r\n                id=\"flexSwitchCheckDefault\"\r\n              />\r\n              <label\r\n                className=\"form-check-label\"\r\n                htmlFor=\"flexSwitchCheckDefault\"\r\n              >\r\n                Dark Mode\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\nNavbar.propTypes = {\r\n  title: PropTypes.string,\r\n  about: PropTypes.string,\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    console.log(\"Uppercase was clicked\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to uppercase!\", \"success\");\r\n  };\r\n  const handleLowClick = () => {\r\n    console.log(\"Lowercase was clicked\" + text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to lowercase!\", \"success\");\r\n  };\r\n  const handleClearClick = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Text cleared!\", \"success\");\r\n  };\r\n  const handleExtraSpaces = () => {\r\n    let newText = text.split(/[ ] + /);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Removed extra spaces!\", \"success\");\r\n  };\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  const [text, setText] = useState(\"Enter text here\");\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"#042743\" }}\r\n      >\r\n        <h1 className=\"mb-4\">{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"#13466e\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"#042743\",\r\n            }}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n          ></textarea>\r\n        </div>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-2 my-1\"\r\n          onClick={handleUpClick}\r\n        >\r\n          Convert to Uppercase\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-2 my-1\"\r\n          onClick={handleLowClick}\r\n        >\r\n          Convert to Lowercase\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-2 my-1\"\r\n          onClick={handleClearClick}\r\n        >\r\n          Clear Text\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-2 my-1\"\r\n          onClick={handleExtraSpaces}\r\n        >\r\n          Remove Extra Spaces\r\n        </button>\r\n      </div>\r\n\r\n      <div\r\n        className=\"container my-2\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"#042743\" }}\r\n      >\r\n        <h2>Text Summary</h2>\r\n        <p>\r\n          {\" \"}\r\n          {\r\n            text.split(/\\s+/).filter((element) => {\r\n              return element.length !== 0;\r\n            }).length\r\n          }{\" \"}\r\n          words and {text.length} characters{\" \"}\r\n        </p>\r\n        <p>\r\n          {0.008 *\r\n            text.split(\" \").filter((element) => {\r\n              return element.length !== 0;\r\n            }).length}{\" \"}\r\n          Minutes Read\r\n        </p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length > 0 ? text : \"Nothing to preview!\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  return (\r\n    <div style={{ height: \"50px\" }}>\r\n      {props.alert && (\r\n        <div\r\n          className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n          role=\"alert\"\r\n        >\r\n          <strong>{props.alert.type}</strong>: {props.alert.message}\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn-close\"\r\n            data-bs-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n          ></button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default Alert;\r\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      message: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 3000);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode is enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode is enabled\", \"success\");\n    }\n  };\n  return (\n    <>\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        <TextForm\n          showAlert={showAlert}\n          heading=\"Try Text Utils - Word counter, Character counter, Remove extra spaces\"\n          mode={mode}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}